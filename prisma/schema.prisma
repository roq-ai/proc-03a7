generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model inventory {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_name        String?      @db.VarChar(100)
  item_description String?      @db.VarChar(255)
  quantity         Int?
  price            Int?
  organization_id  String       @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  organization     organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model item {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_name         String?        @db.VarChar(100)
  item_description  String?        @db.VarChar(255)
  quantity          Int?
  price             Int?
  purchase_order_id String         @db.Uuid
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  purchase_order    purchase_order @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?          @db.VarChar(255)
  name           String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user_id        String           @db.Uuid
  tenant_id      String           @db.VarChar(255)
  inventory      inventory[]
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase_order purchase_order[]
  supplier       supplier[]
}

model purchase_order {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_number    String?      @db.VarChar(100)
  supplier_name   String?      @db.VarChar(100)
  order_date      DateTime?    @db.Date
  delivery_date   DateTime?    @db.Date
  total_amount    Int?
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  item            item[]
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model supplier {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  supplier_name   String?      @db.VarChar(100)
  contact_person  String?      @db.VarChar(100)
  phone_number    String?      @db.VarChar(20)
  email           String?      @db.VarChar(100)
  address         String?      @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  organization   organization[]
  purchase_order purchase_order[]
}
